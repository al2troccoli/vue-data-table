//----------------------------------------------------------
// Media queries
//----------------------------------------------------------
@mixin atExtraSmall() {
  @media only screen and (min-width: $bp_xs-min) {
    @content;
  }
}

@mixin atSmall() {
  @media only screen and (min-width: $bp_sm-min) {
    @content;
  }
}

@mixin atLarge() {
  @media only screen and (min-width: $bp_md-min) {
    @content;
  }
}

@mixin atExtraLarge() {
  @media only screen and (min-width: $bp_lg-min) {
    @content;
  }
}

@mixin onlyMobile() {
  @media only screen and (max-width: $bp_sm-max) {
    @content;
  }
}

@mixin atTabletLandscapeAndDesktop() {
  @media only screen and (min-width: $bp_sm-min) and (orientation: landscape) {
    @content;
  }
}

@mixin atMobileAndTabletPortrait() {
  @media only screen and (min-width: 0) and (orientation: portrait) {
    @content;
  }
}

@mixin onlyTabletPortrait() {
  @media only screen and (min-width: $bp_xs-min) and (max-width: $bp_md-max) and (orientation: portrait) {
    @content;
  }
}

@mixin onlyTabletLandscape() {
  @media only screen and (min-width: $bp_xs-min) and (max-width: $bp_md-max) and (orientation: landscape) {
    @content;
  }
}

//----------------------------------------------------------
// FONT SIZE
//----------------------------------------------------------
//Adds font-size in rem & px
//Value passed should be the expected px size
//Default value 12 - can be customized to fit project
@mixin font-size($sizeValue: 12 ){
  font-size: $sizeValue + px; //fallback for old browsers
  font-size: (0.0625 * $sizeValue) + rem;
}

//Adds line-height in rem & px
//Value passed should be the expected px size
//Default value 20 - can be customized to fit project
@mixin line-height($heightValue: 20 ){
  line-height: $heightValue + px; //fallback for old browsers
  line-height: (0.0625 * $heightValue) + rem;
}

//Rhythm adds font-size and line-height in rem with a px fallback
//Value passed should be the expected px size
//Default values 12, 20 - can be customized to fit project
@mixin rhythm($sizeValue: 12, $heightValue: 20) {
  @include font-size($sizeValue);
  @include line-height($heightValue);
}

//----------------------------------------------------------
// PSEUDO
//----------------------------------------------------------
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

//----------------------------------------------------------
// TRIANGLES
//----------------------------------------------------------
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false, $disp: block){
  @include pseudo($display: $disp, $pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if  $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

//----------------------------------------------------------
// MARGIN AUTO
//----------------------------------------------------------
@mixin push--auto {
  margin: {
    left: auto;
    right: auto;
  }
}

//----------------------------------------------------------
// FONT STYLE
//----------------------------------------------------------
@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $size { font-size: $size; }
  @if $colour { color: $colour; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
}

//----------------------------------------------------------
// TRUNCATION
//----------------------------------------------------------
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

//----------------------------------------------------------
// FLEXBOX
//----------------------------------------------------------
@mixin flex-HLeft-VMiddle {
  align-items: center;
  display: flex;
  justify-content: flex-start;
}

@mixin flex-HCenter-VMiddle {
  align-items: center;
  display: flex;
  justify-content: center;
}

//----------------------------------------------------------
// Z INDEX
//----------------------------------------------------------
@function z($name) {
  @if index($z-indexes, $name) {
    @return (length($z-indexes) - index($z-indexes, $name)) + 1;
  } @else {
    @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
    @return null;
  }
}
$z-indexes: (
        "outdated-browser",
        "modal",
        "site-header",
        "page-wrapper",
        "site-footer"
);